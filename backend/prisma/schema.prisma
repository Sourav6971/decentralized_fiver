// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id        Int     @id @default(autoincrement())
  address   String  @unique
  tasks Task[]
}

model Worker{
  id        Int    @id @default(autoincrement())
  address   String @unique
  pending_amount Int //in lamports
  locked_amount Int //in lamports
  submissions Submission[]
}


model Task{
  id Int @id @default(autoincrement())
  title String
  user_id Int
  signature String
  amount Int //in lamports
  totalSubmissions Int @default(100)
  done Boolean @default(false)
  user User @relation(fields: [user_id], references: [id])
  options Option[]
  submissions Submission[]  
}

model Option{
  id Int @id @default(autoincrement())
  image_url String
  task_id Int
  task Task  @relation(  fields: [task_id], references: [id])
  submissions Submission[]
}


model Submission{
id Int @id @default(autoincrement())
amount Int //in lamports
worker_id Int 
worker Worker @relation(fields: [worker_id],references: [id])
option_id Int
option Option @relation(fields: [option_id],references: [id])
task_id Int
task Task @relation(fields: [task_id],references: [id])
@@unique([worker_id,task_id])//every user should make only one submission to a task
}